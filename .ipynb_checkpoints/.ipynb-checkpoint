{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 105,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import itertools\n",
    "import math\n",
    "import matplotlib.pyplot as plt\n",
    "import random\n",
    "import seaborn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "metadata": {},
   "outputs": [],
   "source": [
    "number_rows = 1000"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "metadata": {},
   "outputs": [],
   "source": [
    "file = pd.read_csv(\"book1.csv\", nrows=number_rows)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "metadata": {},
   "outputs": [],
   "source": [
    "file['Data Length'] = file['name'].str.len()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>Data Length</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4269815011</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>spider1g</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ktheed</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>256082</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>cmt1662</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>10983</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>996</th>\n",
       "      <td>juani123</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>997</th>\n",
       "      <td>872853992</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>998</th>\n",
       "      <td>nomames11</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>999</th>\n",
       "      <td>ripdaddy21</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1000 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           name  Data Length\n",
       "0    4269815011           10\n",
       "1      spider1g            8\n",
       "2        ktheed            6\n",
       "3        256082            6\n",
       "4       cmt1662            7\n",
       "..          ...          ...\n",
       "995       10983            5\n",
       "996    juani123            8\n",
       "997   872853992            9\n",
       "998   nomames11            9\n",
       "999  ripdaddy21           10\n",
       "\n",
       "[1000 rows x 2 columns]"
      ]
     },
     "execution_count": 128,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "metadata": {},
   "outputs": [],
   "source": [
    "L = file['Data Length']\n",
    "N = 127 #number of symbols that can be typed (ascii table)\n",
    "\n",
    "file['strength'] = L*(math.log(N))/math.log(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "metadata": {},
   "outputs": [],
   "source": [
    "file['Data Length'] = file['Data Length'].sort_values()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>Data Length</th>\n",
       "      <th>strength</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>lths</td>\n",
       "      <td>4</td>\n",
       "      <td>27.954739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>995</th>\n",
       "      <td>10983</td>\n",
       "      <td>5</td>\n",
       "      <td>34.943423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>865</th>\n",
       "      <td>byaes</td>\n",
       "      <td>5</td>\n",
       "      <td>34.943423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>634</th>\n",
       "      <td>bambb</td>\n",
       "      <td>5</td>\n",
       "      <td>34.943423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>613</th>\n",
       "      <td>feric</td>\n",
       "      <td>5</td>\n",
       "      <td>34.943423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>welcometomylife32</td>\n",
       "      <td>17</td>\n",
       "      <td>118.807640</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>315</th>\n",
       "      <td>persagrafiti,darketo</td>\n",
       "      <td>20</td>\n",
       "      <td>139.773694</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>907</th>\n",
       "      <td>simone_js@hotmail.com</td>\n",
       "      <td>21</td>\n",
       "      <td>146.762378</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>691</th>\n",
       "      <td>nkostick1@hotmail.com</td>\n",
       "      <td>21</td>\n",
       "      <td>146.762378</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>816</th>\n",
       "      <td>ingenieriacivilmecanica</td>\n",
       "      <td>23</td>\n",
       "      <td>160.739748</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1000 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                        name  Data Length    strength\n",
       "94                      lths            4   27.954739\n",
       "995                    10983            5   34.943423\n",
       "865                    byaes            5   34.943423\n",
       "634                    bambb            5   34.943423\n",
       "613                    feric            5   34.943423\n",
       "..                       ...          ...         ...\n",
       "57         welcometomylife32           17  118.807640\n",
       "315     persagrafiti,darketo           20  139.773694\n",
       "907    simone_js@hotmail.com           21  146.762378\n",
       "691    nkostick1@hotmail.com           21  146.762378\n",
       "816  ingenieriacivilmecanica           23  160.739748\n",
       "\n",
       "[1000 rows x 3 columns]"
      ]
     },
     "execution_count": 131,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "file.sort_values(by=['Data Length'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 132,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(array([ 17., 146., 174., 383., 129.,  52.,  36.,  45.,  10.,   2.,   2.,\n",
       "          0.,   1.,   2.,   1.]),\n",
       " array([ 27.95473875,  36.80707268,  45.65940662,  54.51174056,\n",
       "         63.36407449,  72.21640843,  81.06874237,  89.9210763 ,\n",
       "         98.77341024, 107.62574418, 116.47807811, 125.33041205,\n",
       "        134.18274599, 143.03507992, 151.88741386, 160.7397478 ]),\n",
       " <a list of 15 Patch objects>)"
      ]
     },
     "execution_count": 132,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.hist(file['strength'], bins=15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
